[project]
name = "wasabi-s3-operator"
version = "0.1.0"
description = "Kubernetes operator for managing Wasabi S3 storage"
requires-python = ">=3.11"
license = { text = "Unlicense" }
readme = ""  # intentionally omitted to avoid generating docs automatically
dynamic = ["dependencies"]

[project.optional-dependencies]
test = [
  "pytest>=7.0.0",
  "pytest-asyncio>=0.21.0",
  "pytest-cov>=4.0.0",
  "moto>=4.0.0",  # AWS/S3 mocking
]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
line-length = 100
src = ["src", "tests"]
exclude = [
  "helm",
  "schemas",
]

[tool.ruff.lint]
# Enable common rules + import sorting
select = ["E", "F", "W", "I", "N", "UP", "B", "SIM"]
ignore = []

[tool.ruff.format]
quote-style = "double"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unreachable = true
strict_optional = true
check_untyped_defs = true
no_implicit_optional = true
show_error_codes = true
pretty = true
namespace_packages = true
explicit_package_bases = true
mypy_path = ["src"]

[tool.pytest.ini_options]
addopts = "-q"
pythonpath = ["src"]
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["src"]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]
include = ["wasabi_s3_operator*"]

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }

